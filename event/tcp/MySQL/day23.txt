1、SQL查询
  1,distinct : 不显示字段的重复值
   示例
    1，sanguo表中有哪些国家
       select distinct country from sanguo;
    注意：distinct好人from之间所有字段都相同才会去重
    2，sanguo表中有几个国家
       select count(distinct country) from sanguo;
  2，查询表记录时做数学运算
    1，运算符：+ - * / %
    2，示例
      1、查询表记录时所有英雄攻击力翻倍
        select name,gongji*2 as gongji from sanguo;

2、嵌套查询（子查询）
  1，定义：把内层的查询结果作为外层的查询条件
  2，语法
     select ... from 表名 where 字段名 运算符(select ...)
  3，示例
     1，把攻击值小于平均攻击值的英雄名字和攻击值查询出来
       1，查出平均值
         select avg(gongji) from sanguo;
       2，找出小于平均值的
         select name,gongji from sanguo where gongji<424;
       3,合在一起
         select name,gongji from sanguo where 
	 gongji<(select avg(gongji) from sanguo);
     2,找出每个国家攻击力最高的英雄的名字和攻击值
         select name,gongji from sanguo where 
	 (country,gongji) in(select country,max(gongji) from sanguo group by country);

3、多表查询
  1，两种方式
    1.不加where条件(笛卡尔积)
       select t1.name,t2.name from t1,t2;
       select sheng.s_id,city.c_id from sheng,city;
    2.加where条件
       select 字段名列表 from 表1,表2 where 条件;
       select sheng.s_id,city.c_id,xian.x_id from sheng,city,xian 
       where s_id=cfather_id and c_id=xfather_id;
  
4、连接查询
  1.内连接 inner join
    1.语法格式
      select ... from 表1 inner join 表2 on 条件 inner join 表3 on 条件;
    2.示例
      查找省、市、县详细信息
      select sheng.s_name,city.c_name,xian.x_name from sheng
      inner join city
      on sheng.s_id=city.cfather_id
      inner join xian
      on city.c_id=xian.xfather_id;
  2.外链接 
    1、左连接(left join)
      1、以左表为主显示查询结果
         select sheng.s_name,city.c_name from sheng
	 left join city
	 on sheng.s_id=city.cfather_id;
    2、右连接(right join)
      1、以右表为主显示查询结果
         select sheng.s_name,city.c_name from sheng
	 right join city
	 on sheng.s_id=city.cfather_id;

5、约束
  1、作用 ：保证数据的一致性、有效性
  2、约束分类
    1、默认约束(default)
      插入记录时,不给该字段赋值,则使用默认值
      sex enum("M","F","S") default "S";
    2、非空约束(not null)
      不允许该字段的值为 NULL
      id int not null,
      id int not null default 0,

6、索引
  1、定义
    对数据库表的一列或者多列的值进行排序的一种结构(BTrue方式)
  2、优点
    加快数据的检索速度
  3、缺点
    1，占用物理存储空间
    2，当对表中数据更新时，索引需要动态维护，占用系统资源，降低表中数据维护速度
  4、索引示例
    1、开启运行时间检测
        set profiling=1;
    2、执行查询语句(没有索引)
        select name from t1 where name="lucy888888";
    3、在name字段创建索引
        create index name on t1(name);
    4、再执行查询语句(有索引)
        select name from t1 where name="lucy999999";
    5、对比查询时间
        show profiles;

7、索引分类
  1、普通索引(index)
  2、唯一索引(unique)
     1、使用规则
        1、可设置多个字段
	2、约束  
	   普通索引：无约束                key标志：MUL
	   唯一索引：字段值不允许重复，可为null     UNI
	3、把经常用来查询的字段设置为索引字段
     2、创建表时创建
       create table 表名(
       .....
       index(name),
       index(age),
       unique(phnumber),
       unique(cardnumber)
       );
     3、已有表创建
       create [unique] index 索引名 on 表名(字段名);
     4、查看索引
       1、desc 表名;  --> key标志
       2、show index from 表名;
     5、删除索引
       drop index 索引名 on 表名;
  3、主键(primary key)&&自增长(auto_increment)
     1、使用规则
       1、只能有1个字段
       2、约束：字段值不允许重复，且不能为null
       3、key标志：PRI
       4、通常设置编号id为主键，能唯一锁定1条记录
     2、创建表时创建
       create table 表名(
       id int primary key auto_increment,
       ...
       );
     3、已有表创建
       alter table 表名 add primary key(id);
     4、删除
       1、先删除自增长
         alter table 表名 modify id int;
       2、删除主键
         alter table 表名 drop primary key;
       3、指定自增长起始值
         1、create table 表名(...)auto_increment=1000;
         2、alter table 表名 auto_increment=1000;
  
  4、外键(foreign key)
    1、使用规则
      1、主表、从表数据类型要一致
      2、主表被参考字段一定要为主键
    2、语法格式
      foreign key(...) references 主表(...)
      on delete cascade
      on update cascade


    3、注意
      1、在已有表中条件外键关联时,会受到表中原有数据的限制
	 create table bjtab(
	    -> stu_id int,
	    -> name varchar(15),
	    -> money smallint,
	    -> foreign key(stu_id) references jftab(id)
	    -> on delete cascade
	    -> on update cascade
	    -> );
    4、删除
       1、查看外键名
          show create table bjtab;
       2、删除外键
          alter table 表名 drop foreign key 外键名;
    5、在已有表中添加外键
          alter table bjtab add foreign key(stu_id)
	  references jftab(id)
	  #on delete set null
	  #on update set null;
       （5、已有表
         alter table 表名 add constraint 外键名
         foreign key(...) ........）
    6、级联动作
        1、cascade
	  数据级联删除、更新(参考字段)
	2、set null
	  从表有相关联记录，字段值设置为null
	3、restrict(默认)
	  从表有相关联记录，不让主表删除、更新
