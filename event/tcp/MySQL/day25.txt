day25
1、事务和事务回滚
  1、定义：一件事从开始发生到结束的过程
  2、作用：确保数据的一致性
  3、事务和事务回滚的应用
    SQL命令默认自动提交到数据库执行
    show variables like 'autocommit'
    1、开启事务
      mysql>begin;
    2、终止事务
      mysql>commit; | rollback
  4、示例
      1、背景
        你 ：建行卡
	朋友 ：工行卡
	你在建行自动取款机 给你朋友 转5000块钱
      2、建表
        表1、CCB
          create table CCB(
	  name varchar(20),
	  money decimal(20,2)
	  );
	  insert into CCB values("有钱人",100000);
	表2、ICBC
	  create table ICBC(
	  name varchar(20),
	  money decimal(20,2)
	  );
	  insert into ICBC values("没钱人",0);
      3、开始转账
	成功：
        mysql> begin;
	mysql> update CCB set money=money-5000 where name="有钱人";
	mysql> update ICBC set money=money+5000 where name="没钱人";
	mysql> commit;
	#####转账成功#####

	失败 ：
	mysql> begin;
	mysql> update CCB set money=money-5000 where name="有钱人";
	mysql> update ICBC set 工行服务器故障... ;
	mysql> rollback;
	#####转账失败#####
  5、注意
    事务只针对于表的记录操作
2、与python交互
  1、python3
    1、模块名：pymysql
    2、安装
      1、在线：sudo pip3 install pymysql
      2、离线：pymysql-0.7.11.tar.gz
        $ tar-zxvf pymysql-0.7.11.tar.gz
	$ cd pymysql0.7.11
	$ python3 setup.py install
      ##安装pip3## sudo apt-get install python3-pip
  2、Python2
    1、模块名：MySQLdb
    2、安装：sudo pip install mysql-python

  3、环境准备
  4、pymysql使用流程
    1、数据库连接对象：db=pymysql.connect(...)
    2、游标对象      ：cur = db.cursor()
    3、执行命令      ：cur.execute('sql命令')
    4、提交          ：db.commit()     
    5、关闭游标      ：cur.close()
    6、关闭数据库连接：db.close()
  5、数据库连接对象(db)方法
    1、db.commit()   ：提交到数据库执行
    2、db.rollback() ：回滚
    3、db.close()    ：断开与数据库连接
    4、db.cursor()   ：创建游标对象
  6、游标对象(cur)方法
    1、cur.execute('sql命令') ：执行sql命令
    2、cur.close()            ：关闭游标对象
    3、cur.fetchone()         ：取第一条(查询)
    4、cur.fetchmany(n)       ：取n条(查询)
    5、cur.fetchall()         ：取所有记录(查询)
     ## fetchmany(n) 和 fetchall() 得到的结果一定是一个大元组套着小元组 ((),(),())
      示例：
	import pymysql
	db = pymysql.connect(host='localhost',user='root',password='123456',
	database='db5',charset='utf8')
	cursor = db.cursor()
	try:
	    cursor.execute("select * from t1")

	    # 取走游标对象里的一条记录
	    data1 = cursor.fetchone()
	    print(data1)
	    print('*' * 40)

	    #取走游标对象里的多条记录
	    data2 = cursor.fetchmany(2)
	    print(data2)
	    print('*'*40)

            # 取走游标对象里剩下的所有记录
	    data3 = cursor.fetchall()
	    print(data3)
	except Exception as e:
	    db.rollback()
	    print("Failed",e)
	    
	cursor.close()
	db.close()

  7、connect()连接对象的参数
    1、host    ：主机地址
    2、user    : 用户名
    3、password：密码
    4、database：库名
    5、charset ：字符集(推荐utf8)
    6、port    ：端口号(3306)
  8、示例：
	import pymysql
	db = pymysql.connect(host='localhost',user='root',password='123456',
	database='db5',charset='utf8')
	cursor = db.cursor()
	try:
	    cursor.execute("insert into t1(name,score) values('小姐姐',90)")
	    upd = 'update t1 set score=100 where name="李白"'
	    cursor.execute(upd)
	    cursor.execute("delete from t1 where name='王维'")
	    db.commit()
	    print('ok')
	except Exception as e:
	    db.rollback()
	    print("Failed",e)
	    
	cursor.close()
	db.close()

	7c4a8d09ca3762af61e59520943dc26494f8941b
3、ORM(Object Relation Mapping对象关系映射)
  1、定义
    把对象模型映射到MySQL数据库中
  2、sqlalchemy安装
    在线：sudo pip3 install sqlalchemy
    离线：
      $ tar -xf sql ...tar.gz
      $ cd sqlalchemy
      $ sudo python3 setup.py install
  3、示例
    class User(Base):
        __tablename__ = 't123'
	id = Column(integer,primary_key=True)
	name = Column(String(20))
  4、映射类型
    1、python类(class) <-----> 数据库中表
        class User ...            t123
    2、python中类属性  <-----> 数据库中表字段(id ..)
        id = Column(Integer)
    3、关系映射
        1:1  :主外键关联，添加唯一约束
	1:n  :主外键关联
	m:n  :通过中间表实现

主表    从表
id      stu_id unique
1         1
2         3
3         


图形界面
 windows:Navicat


session





















