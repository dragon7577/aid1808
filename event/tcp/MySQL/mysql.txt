MySQL
sudu /etc/init.d/mysql start
sudu /etc/init.d/mysql status | stop | restart

mysql -hlocalhost -uroot -p123456

show databases;
create database 库名[ character set utf8];
show create databse 库名;
select database();
use 库名
show tables;
drop database 库名;

表
create table 表名(字段1 数据类型,字段2 数据类型)default charset=utf8;
show create table 表名;
select * from 表名;
desc 表名;
drop table 表名;
insert into 表名 values(值1),(值2),(值3)；
insert into 表名(字段1,字段2,...) values(值1),(值2),..;
select * from 表名 [where 条件];
select 字段1,字段2,... from 表名 [where 条件]；
delete from 表名 where 条件;
updata 表名 set 字段1=值1,字段2=值2 where 条件;
select * from 表名 where 字段名 like 表达式;  如："_%_"
                   where 字段名 in/not in(值1,值2,...);
                                between 值1 and 值2;  
select ... 聚合函数 from 表名
  where...
  group by select后的字段名
  having ...
  order by 字段名 ASC/DESC
  limit n/ m,n;
聚合函数
avg()
max()
min()
sum()
count()

slelct * from 表名 where 字段名 运算符(时间-interval 时间间隔单位);
select distinct 字段名      
select ..from 表名 where 字段名 运算符(select ...)   
select t1.name,t2.name from t1,t2;
select 字段名列表 from 表1,表2 where 条件;

select ... from 表1 inner join 表2 on 条件 inner join 表3 on 条件;
select ... from 表1 left join 表2 on 条件;
select ... from 表1 right join 表2 on 条件;                         

alter table 表名 add 字段名 数据类型;
alter table 表名 add 字段名 数据类型 first;
alter table 表名 add 字段名 数据类型 after 字段名;
alter table 表名 drop 字段名;
alter table 表名 modify 字段名 新数据类型;
alter tabler 原表名 rename 新表名;


数据类型
int
tinyint
  signed
  unsigned
smallint
bigint

float(m,n)
double(m,n)
decimal(m,n)

char(定长)
varchar(变长)
text/longtext/blob/longblob

enum(值1,值2,值3...)
set(值1,值2,值3...)

date:"YYYY-MM-DD"
time:"HH:MM:SS"
datetime:"YYYY-MM-DD HH:MM:SS"  
timestamp:"YYYY-MM-DD HH:MM:SS"

now()
curdate()
curtime()

year(date)
date(date)
time(date)

约束:
default
not null

索引
index (MUL)
unipue  (UNI)
  create table 表名(... index(name),unique(phnumber));
  create [unque] index 索引名 on 表名(字段名);
  desc 表名
  show index from 表名;
  drop index 索引名 on 表名;
primary key &&auto_increment)(PRI)
  create tble 表名(id int primary key auto_increment,...);
  alter table 表名 modify id int;
  alter table 表名 drop primary key;
  create table 表名 (...)auto_incremrnt=100;
  alter table 表名 auto_increment=100;
foreign key
  create table 表名(s_id int,...,
         foreign key(s_id) references 表2(t_id)
         on delete cascade
         on update cascade
  show create table 表名;
  alter table 表名 drop foreign key 外键名;
  alter table s表名 add foreign key(s_id) references t表(t_id)
      # on delete set null
      # on update set null;
  alter tabel 表名 add constraint 外键名 foreign key(...)....);
  
  cascade
  set null
  restrict

锁
  show engines;
  show create table 表名;
  create tabel 表名(...)engine=MyISAM;
  alter table 表名 engine=InnoDb;
  表名.frm
  表名.ibd
  表名.MYI
  
  mysqldump -u用户名 -p 源库名 > xxx.sql
    --all-databases
    库名
    -B 库1 库2 库3
    库名 表1 表2 表3
  mysql -u用户名 -p 目标库名 < xxx.sql
  
  load data infile "文件名"
     into table 表名
     fields terminated by "分隔符"
     lines terminated by "\n"
  show variables like 'secure_file_priv';
  dudo cp 表名 /var/lib/mysql-files/
  select 字段名1,字段名2,.. from 库名.表名
     into outfile "/var/lib/mysql-files/表名.csv"
     fields terminated by ","
     lines terminated by "\n";

开启远程连接
  sudo -i
  cd /etc/mysql/mysql.conf.d/
  subl mysqld.cnf
  #bind-address=127.0.0.1 去掉#保存退出
grant 权限列表 on 库.表 to "用户名‘@’%"
  indentified by "密码"
  with grant option;
     all privileges、select、drop  
数据库三范式
  1、第一范式(1NF)：列不可拆分
  2、第二范式(2NF)：唯一标识
  3、第三范式(3NF)：引用主键

事务
  show variables like "autocommit"
  mysql> begin;
  mysql> commit; | rollback

与python交互
  pymysql
    db=mysql.connect(host="..",user=*,password=*,database=*,
                     charset="utf8"[,port=3306])
    cur = db.cursor()
    cur.execute("sql命令")
    db.commit()
    cur.close()
    db.close()
  db
    db.commit()
    db.rollback()
    db.close()
    db.cursor()
  cur
    cur.execute("sql命令")
    cur.close()
    cur.fetchone()
    cur.fetchmany(n)
    cur.fetchall()

ORM
  python类(class)    数据库中的表
  python类属性       数据库中表字段
















  