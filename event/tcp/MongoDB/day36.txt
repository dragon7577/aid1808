query的筛选功能
  操作符：使用$符号注明的一个有特殊意义的字符串，用以表达丰富的含义。比如$lt 表示小于
         e.g. db.class0.find({age:{$eq:17},{_id:0}})
	 相当于 db.class0.find({age:17},{_id:0})
  $eq 等于 =
  $lt 小于 <
  $gt 大于 >
  $1te 小于等于 <=
     db.class0.find({age:{$gte:17,$lt:19}},{_id:0})
  $gte 大于等于 >=
     db.class0.find({age:{$gte:18}},{_id:0})
  $ne  不等于  !=
     db.class0.find({age:{$ne:17}},{_id:0})
  $in:[] 包含
     e.g. 查找年龄在数组范围中的文档
     db.class0.find({age:{$in:[17,18,20]}},{_id:0})
  $nin  不包含
     e.g. db.class0.find({age:{$nin:[17,18]}},{_id:0})

逻辑操作符
    表示逻辑与
    1.在query文档中逗号隔开的多个键值对即表示与关系
      e.g. 年龄等于17 并且性别为女
        db.class0.find({age:17,sex:'w'},{_id:0})
    2.$and 
        db.class0.find({$and:[{age:17},{sex:'w'}]},{_id:0})
    3.$or 逻辑或
        年龄小于18或性别为女
        db.class0.find({$or:[{age:{$lt:18}},{sex:'w'}]},{_id:0})
    4.$not 逻辑非
        年龄大于17
        db.class0.find({age:{$not:{$gt:17}}},{_id:0})
    5.$nor 表示逻辑既不也不    not(A or B)
        既不是男的，年龄又不大于18
	db.class0.find({$nor:[{age:{$gt18}},{sex:'m'}]},{_id:0})
    6复合条件  年龄大于等于20或小于等于18，性别为女，id不显示
        db.class0.find({$or:[{age:{$gte:20}},{age:{$lte:18}}],sex:'w'},{_id:0})
数组类型查找
  数组：一组数据的有序集合，使用[]表示
      *有序的
      *数据类型可以不同

查找数组中包含某一项
  e.g. 查找score数组中包含90的文档
     db.class3.find({score:90},{_id:0})

查找数组中包含多项  $all
  e.g.查找包含89和90的
     db.class3.find({score:{$all:[89,90]}},{_id:0})
根据数字项数查找 $size
  e.g.查找数组中包含三项的文档
     db.class3.find({score:{$size:3}},{_id:0})
选择数组的查询部分 $slice （用于field参数）
  e.g.显示数组前2项
  db.class3.find({name:'xiaoming'},{_id:0,socre:{$slice:2}})
  e.g.跳过数组第一项，显示后面2项
  db.class3.find({name:'xioaming'},{_id:0,socre:{$slice:[1:2]}})
其他查找操作
   $exists 判断一个域是否存在，操作符值为bool（匹配是否具有指定域的文档）
   e.g. 查找不存在sex域的文档(false表示不存在，true表示存在)
     db.class3.find({sex:{$exists:false}},{_id:0})
   $mod 根据除
   $type 根据数据类型查找（如果域是指定类型，则选择文档）
     查找name数据类型为'2'的文档
     e.g. db.class0.find({name:{$type:2}},{_id:0})
     *通过mongodb.com查找数据类型对应的数字

数据处理函数
  distinct(field)
    功能：获取集合中某个域取值范围
  pretty()查找结果格式化显示


  count()
    功能：对查找结果计数统计
      db.class0.find({age:17},{_id:0}).count()
  sort({field:1/-1})
    功能：排序 1表示升序，-1表示降序
      db.class0.find({age:{$gt:20}},{_id:0}).sort({age:1})
   *复合排序：对多个域进行排序，当第一排序项相同时，参考第二排序项，依次类推
     e.g.当年龄相同时按照姓名升序排序
     db.class0.find({},{_id:0}).sort({age:1,name:1})
  limit(n) 显示n个数据

  函数可以连续调用
    * 当一个函数的返回结果仍然是文档集合，可以连续调用函数
     e.g.查找年龄最大的三位同学
     db.class0.find({},{_id:0}).sort({age:-1}).limit(3)

    *对筛选的文档集合，可以使用索引号取某一项
     e.g. 通过序列号1取到筛选结果
       db.class0.find({},{_id:0})

  文档删除操作
    mysql: delete from table where ..
    mongo: db.collection.deleteOne(query)
      功能：删除符合条件的第一个文档
      参数：筛选条件 用法同find query
    db.class0.deletemany(query)
       删除符合条件的全部文档
    db.collection.remove(query,true)
      删除一个
    db.collection.remove(query)
      删除全部
      db.collection.remove({})
      db.collection.deletemany({})
      删除集合内所有文档
    db.collection.findOneAndDelete(query)
      功能：查找某个文档并删除
      参数：query
      返回: 显示查找到的文档

练习
  1、创建数据库。名字  grade
  2、在数据库中创建集合 class
  3、在集合中插入数据若干（8条左右）格式入下：
    {name:xxx,age:10,sex:'m',hobby:['draw','dance']}
    年龄7-14
    hobby：draw dance running sing football basketball computer
  4、查找练习
     查看班级所有人信息
     查看班级中年龄为8岁的人员信息
     查看年龄大于10岁的学生信息
     查看年龄在8-12岁的学生信息
     查看年龄为9岁且喜欢画画的女生
     查看年龄小于8岁或者大于12岁的学生
     找到年龄为9岁或者11岁的学生
     找到有两项兴趣爱好的同学
     找到兴趣爱好有计算机的同学
     找到既喜欢画画又喜欢跳舞的同学
     同学兴趣爱好有三项的学生人数
     找到本班年龄第二大的同学
     查看本班同学兴趣爱好的涵盖范围
     找到本班年龄最小的三个同学
     删除所有年龄大于12或者小于8岁的同学

   update
      updateOne
      updateMany
     db.collection.update(query,update,upsert,multi)
       功能：修改筛选文档
       参数：query 筛选内容
             update 修改内容
             upsert 如果为true则如果query文档不存在可以插入新的文档
             multi  默认为false 表示只能修改一条文档
                    设置为true 表示可以修改多条文档
   e.g.  db.class0.update({name:'Tom'},{age:17})  如果没有Tom不做任何修改
         db.class0.update({name:'Tom'},{$set:{age:17}},true)  没有Tom则添加一条
	 db.class0.update({sex:{$exists:false}},{$set:{age:20}})  默认只修改一条
	 db.class0.update({sex:{$exists:false}},{$set:{age:20}},false.true)

   db.collection.findOneAndUpdate(query,update)
     功能：查找一个文档并修改
     参数
     query 查找条件
     update 修改内容
     返回：修改前的文档内容
         db.class0.findOneAndUpdate({name:'Tom'},{$set:{age:18}})
   
       db.collection.findOneAndReplace(query,docuement)
         功能：查找并替换一个文档
         参数：query
               document  要替换的内容
	 返回：返回替换前的内容
	    用新文档替换查找到的文档
	   db.class0.findOneAndReplace({abc:123},{name:'Tom',age:18})

作业： 复习mongodb的增删改查操作
       将‘三国’使用mongodb进行构建操作